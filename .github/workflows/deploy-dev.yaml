name: Deploy DEV 

on: [push]


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node Modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          
      - name: Install Dependecies
        run: npm install

      - name: Build Project
        run: npm run build --if-present

      - name: Test Project
        run: npm run test:coverage

      - name: Increment Package Version
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          # npm version patch -m "[no ci] CI: DEV v$(node -p "require('./package.json').version")}" 
          npm version patch --no-git-tag-version
          git add package.json && git add package-lock.json
          git reset --soft HEAD~1
          git commit -m "$(git log -n 1 --pretty=format:%s)  v$(node -p "require('./package.json').version")"
          git push origin main --force-with-lease -o ci.skip

      - name: Create Tag
        run: |
          git fetch --tags
          git tag -a "v$(node -p "require('./package.json').version")" -m "v$(node -p "require('./package.json').version")"
          git push origin "v$(node -p "require('./package.json').version")" -f

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.run_id }} 
          path: |
            dist
            !dist/**/*.md
            !dist/test
            !dist/ci

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: dist/test/coverage/lcov-report/index.html


  commit_log:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Commit Log 
        run: |
          git fetch --tags
          mkdir -p dist/ci && git --no-pager log --oneline $(git tag -l --sort=-version:refname "SIT-v*" | head -n 1)..HEAD > dist/ci/commit-log.txt
          touch dist/ci/revision-list.txt

      - name: Upload Commit Log 
        uses: actions/upload-artifact@v4
        with:
          name: commit-log 
          path: dist/ci/commit-log.txt


      
