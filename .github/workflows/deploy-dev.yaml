name: Deploy DEV 

on: [push]

jobs:
  build_test_tag:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node Modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          
      - name: Install Dependecies
        run: npm install

      - name: Build Project
        run: npm run build --if-present

      - name: Test Project
        run: npm run test:coverage

      - name: Create Build Number 
        run: |
          echo "BUILD_NUMBER=$(git --no-pager log --oneline -n 1 --pretty=%cs)-${{ github.run_id }}" >> $GITHUB_ENV

      - name: Create Tag
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git fetch --tags
          git tag -a "$BUILD_NUMBER" -m "$BUILD_NUMBER"
          git push origin "$BUILD_NUMBER" -f

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.BUILD_NUMBER}}
          path: |
            dist
            !dist/**/*.md
            !dist/test
            !dist/ci

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: dist/test/coverage/lcov-report/index.html


  commit_log:
    needs: build_test_tag 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Tags
        run: |
          git fetch --tags

      - name: Get Commit Log 
        id: commit-log
        run: |
          mkdir -p dist/ci 
          {
            echo 'COMMIT_LOG<<EOF' 
            git --no-pager log --oneline $(git tag -l --sort=-version:refname "SIT-*" | head -n 1)..HEAD 
            echo 'EOF' 
          } >> $GITHUB_OUTPUT

      - name: Save Commit Log
        run: |
          echo ${{ steps.commit-log.outputs.COMMIT_LOG }} > dist/ci/commit-log.txt

      - name: test
        run: |
          echo ${{ steps.commit-log.outputs.COMMIT_LOG }}
          cat dist/ci/commit-log.txt

      - name: Upload Commit Log 
        uses: actions/upload-artifact@v4
        with:
          name: commit-log 
          path: dist/ci/commit-log.txt 
